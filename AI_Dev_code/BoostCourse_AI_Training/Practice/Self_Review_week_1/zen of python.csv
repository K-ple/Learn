"Zen of Python, by Tim Peters","파이썬의 선, 팀 피터슨"
Beautiful is better than ugly.,아름다운것이 못생긴 것보다 좋습니다.
Explicit is better than implicit.,명시적인 것이 암시적인 것보다 좋습니다.
Simple is better than complex.,단순한 것이 복잡한 것보다 좋습니다.
Complex is better than complicated.,복잡한 것이 난해한 것보다 좋습니다.
Flat is better than nested.,단조로운 것이 중첩된 것보다 좋습니다.
Sparse is better than dense.,여유로움이 밀집된 것보다 좋습니다.
Readability counts.,가독성은 중요합니다.
Special cases aren't special enough to break the rules.,"특별한 상황이, 규칙을 깰 만큼 특별하단 얘기는 아닙니다."
Although practicality beats purity.,비록 실용성이 이상을 능가한다 할지라도요.
Errors should never pass silently.,오류는 조용히 넘어가서는 안됩니다.
Unless explicitly silenced.,알고도 침묵하지 않는 한에서요.
"In the face of ambiguity, refuse the temptation to guess.","모호한 상황이라면, 추측하려 하지 마세요."
There should be one-- and preferably only one --obvious way to do it.,문제를 해결할 하나의 - 바람직하고 유일한 - 명백한 방법이 있을 것이다.
Although that way may not be obvious at first unless you're Dutch.,비록 당신이 우둔해서 처음에는 명백해 보이지 않을 수도 있겠지만요.
Now is better than never.,지금 하는 것이 전혀 안하는 것보다 좋습니다.
Although never is often better than right now.,비록 하지않는 것이 지금 하는 것보다 나을 때도 있지만요.
"If the implementation is hard to explain, it's a bad idea.","구현 방식이 설명하기 어렵다면, 그것은 좋지 않은 생각입니다."
"If the implementation is easy to explain, it may be a good idea.","구현 방식이 설명하기 쉽다면, 그것은 아마 좋은 생각일 겁니다."
Namespaces are one honking great idea -- let's do more of those!,Namespaces는 쩌는 생각입니다. 더욱 이런 것들을 해봅시다!